version: "3.9"

services:
  mongo1:
    container_name: mongo1
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - ~/mongors/data1:/data/db
      - ./rs-init.sh:/scripts/rs-init.sh
      - ./mongo-setup_init.sh:/setup/mongo-setup_init.sh
    networks:
      - mongors-network
    ports:
      - "27021:27017"
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo2:
    container_name: mongo2
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - ~/mongors/data2:/data/db
    networks:
      - mongors-network
    ports:
      - "27022:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - ~/mongors/data3:/data/db
    networks:
      - mongors-network
    ports:
      - "27023:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

networks:
  mongors-network:
    driver: bridge


#
#services:
#  mongo1:
#    image: mongo
#    container_name: mongo1
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
#      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
#      MONGO_INITDB_DATABASE: ${DB_NAME}\
#    ports:
#      - "8000:27017"
#    networks:
#      - mongo-networks
#    volumes:
#      - ./mongo-setup_init.sh:/docker-entrypoint-initdb.d/mongo-setup_init.sh:ro
#      - ./mongoRepl/mongo1:/data/db
#    command: mongod --replSet replication
#
#  mongo2:
#    image: mongo
#    container_name: mongo2
#    restart: always
#    ports:
#      - "8001:27017"
#    volumes:
#      - ./mongoRepl/mongo2:/data/db
#    networks:
#      - mongo-networks
#    command: mongod --replSet replication
#    depends_on:
#      - mongo1
#
#  mongo3:
#    image: mongo
#    container_name: mongo3
#    restart: always
#    ports:
#      - "8002:27017"
#    volumes:
#      - ./mongoRepl/mongo3:/data/db
#    networks:
#      - mongo-networks
#    command: mongod --replSet replication
#    depends_on:
#      - mongo1
#
#networks:
#  mongo-networks:
#    driver: bridge